!!! Удалить!!!
Подбирать оптимальный вариант по реализации, с т.з. курса!
-----------------------------------------------------------------------------------

Описание сервис "архитектура как код"

Цель: релаизация концепции "Архитектура как код" в виде web-service

Контекст: Концепция архитектура как код, подразумевает возможность создания архитектурных артефактов
на основе формализованных описаний пользователя. Т.е. пользователь пишет по определенным правилам код
система на основе этого кода создает артефакты.

Ограничения: В данной работе реализация позволит создавать следущие артефакты:
 - Описание сервисов:
	- Название
	- Краткое описание
	- Контракты (rest, IDL принимаемых и публикуемых сообщений)
	- Технология реализации
	- Связи(зависимости)
	- Ключевой/ые домены предметной области
 - Схема взаимодействия сервисов
 - Схема тех. процессов
 - Генерация шаблонов сервисов
 - Манифесты кубера или докер-композ
 
Функциональные требования:
 - Личный кабинет пользователя: 
	- Авторизация, регистрация, 
	- добавление проектов, правки проекта, 
	- просмотр активностей, 
	- загрузка/выгрузка yaml манифестов, 
	- генерация схем, 
    - Генерация документации
	- выгрузка проектов?(CLI код spring-boot )
    - уведомления
    - ревью

User-story: 
 1. Ползователь регистрируется, авторизуется, заполняет профиль
 2. Авторизуется, открывет реестр проектов, открывает проект, редактирует проект, сохраняет, 
    добавляет ревьюера, отправляется уведомление ревьюеру и самому пользователю.
 2.1 Редактирует проект: добавление манифеста, правки манифеста, загрузка/выгрузка манифеста
 2.2 Генерирует:
	- схемы, 
        - генерирует шаблоны сервисов,
        - генерирует документацию
        + выгружает: схемы,сервисы, готовые манифесты.
 2.3 Назначает исполнителя
 2.4 Назначает ревьюера, выставляет сроки ревьюеру
 3. ?Авторизуется, создает проект, сохраняет, доавляет исполнителя (invite, permissions)
 4. Авторизуется, заходит в историю активностей, просматривает, фильтрует 
 5. авторизуется админом, может удалить/заблокировать пользователя, просмотр, удаление истории активностей
    назначение ролей.
 6. Авторизуется, просмотр реестра назначений на ревью, выбор проекта, добавление комментариев, удаление комментариев, 
    отправляется уведомление автору.

Идеи:
Редактирование справочников
Добавлление правил для новых сущностей
Указание какой сервис,если существует исполняет роли указанного в архитектуре, 
напиример существующий сервис auth-sudir - это сервис авторизаии, его и указывем как авториз
