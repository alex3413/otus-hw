apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "user-chart.fullname" . }}-user
  labels:
    {{- include "user-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "user-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "user-chart.labels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-user
          image: "{{ .Values.image.repository.user }}:{{ .Values.image.tag }}"
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort.user }}
              protocol: TCP
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.pgUsernameKey }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.pgPasswordKey }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configMap.name }}
      volumes:
        - name: config
          configMap:
            name: {{ .Values.configMap.name }}
---
{{/*auth-app*/}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "user-chart.fullname" . }}-auth
  labels:
    {{- include "user-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaAuthCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "user-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "user-chart.labels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-auth
          image: "{{ .Values.image.repository.auth }}:{{ .Values.image.tag }}"
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort.auth }}
              protocol: TCP
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.pgUsernameKey }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.pgPasswordKey }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configMap.name }}
      volumes:
        - name: config
          configMap:
            name: {{ .Values.configMap.name }}
---
{{/*gateway*/}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "user-chart.fullname" . }}-gateway
  labels:
    {{- include "user-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaAuthCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "user-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "user-chart.labels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-gateway
          image: "{{ .Values.image.repository.gateway }}:{{ .Values.image.tag }}"
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort.gateway }}
              protocol: TCP
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.pgUsernameKey }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.pgPasswordKey }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configMap.name }}
      volumes:
        - name: config
          configMap:
            name: {{ .Values.configMap.name }}